buffer:= 3:
m:= 24:
n:= 24:

Bindex:= proc(i, j)
         if i = 1 then
            0
         elif i <= m then
            if i = 2 and j = 1 then
               1
            elif j = i - 1 then
               1/(2*(i - 1))
            elif j = i + 1 then
               -1/(2*(i - 1))
            else
               0
            fi
         elif i = m + 1 and j = m then
            1/(2*m)
         else
            0
         fi
         end:

B:= proc(k, l)
    local dim, Bmat, i, j;

    dim:= max(m, n) + 1 + buffer;
    Bmat:= matrix(dim, dim, Bindex);
    Bmat:= evalm(Bmat^k);
    for i from 1 to l do
       for j from 1 to n+1 do
          Bmat[i, j]:= 0
       od
    od;
    submatrix(Bmat, 1..(m+1), 1..(n+1))
    end:

Bp:= proc(k, l)
     local dim, Bmat, i, j;

     dim:= max(m, n) + 1 + buffer;
     Bmat:= matrix(dim, dim, Bindex);
     Bmat:= evalm(Bmat^k);
     for j from 1 to n+1 do
        Bmat[1, j]:= 1;
        Bmat[2, j]:= (-1)^(j+1);
     od;
     submatrix(Bmat, 1..(m+1), 1..(n+1))
     end:

Xindex:= proc(i, j)
         if i = 2 and j = 1 then
            1
         elif j = i - 1 or j = i + 1 then
            1/2
         elif j = i then
            a
         else
            0
         fi
         end:

X:= proc(a)
    local dim, Xmat;

    dim:= max(m, n) + 1 + buffer;
    Xmat:= matrix(dim, dim, Xindex);
    submatrix(Xmat, 1..(m+1), 1..(n+1))
    end:

prod:= proc(i, j, A, B)
       local k;

       sum(A(i, k)*B(k, j), k = 1..n)
       end:
